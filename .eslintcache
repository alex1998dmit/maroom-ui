[{"/home/alexander/maroom-ui/src/theme/typography.ts":"1","/home/alexander/maroom-ui/src/theme/colors.ts":"2","/home/alexander/maroom-ui/src/components/Input/Input.tsx":"3","/home/alexander/maroom-ui/src/index.tsx":"4","/home/alexander/maroom-ui/src/App.tsx":"5","/home/alexander/maroom-ui/src/components/Heading/Heading.tsx":"6","/home/alexander/maroom-ui/src/components/Text/Text.tsx":"7","/home/alexander/maroom-ui/src/components/ValidationError/ValidationError.tsx":"8","/home/alexander/maroom-ui/src/theme/index.ts":"9","/home/alexander/maroom-ui/src/components/Heading/index.ts":"10","/home/alexander/maroom-ui/src/components/Text/index.ts":"11","/home/alexander/maroom-ui/src/components/Input/index.ts":"12","/home/alexander/maroom-ui/src/components/ValidationError/index.ts":"13","/home/alexander/maroom-ui/src/icons/CloseInCircleIcon.js":"14","/home/alexander/maroom-ui/src/components/Button/index.ts":"15","/home/alexander/maroom-ui/src/components/Button/Button.tsx":"16","/home/alexander/maroom-ui/src/icons/Plus.tsx":"17","/home/alexander/maroom-ui/src/dist/index.js":"18"},{"size":308,"mtime":1608642853943,"results":"19","hashOfConfig":"20"},{"size":615,"mtime":1608725051179,"results":"21","hashOfConfig":"20"},{"size":2292,"mtime":1608649857379,"results":"22","hashOfConfig":"20"},{"size":197,"mtime":1608625287343,"results":"23","hashOfConfig":"20"},{"size":4031,"mtime":1608809594092,"results":"24","hashOfConfig":"20"},{"size":814,"mtime":1608646341826,"results":"25","hashOfConfig":"20"},{"size":1145,"mtime":1608649089110,"results":"26","hashOfConfig":"20"},{"size":1210,"mtime":1608706337657,"results":"27","hashOfConfig":"20"},{"size":178,"mtime":1608624585180,"results":"28","hashOfConfig":"20"},{"size":140,"mtime":1608642814659,"results":"29","hashOfConfig":"20"},{"size":96,"mtime":1608646459529,"results":"30","hashOfConfig":"20"},{"size":86,"mtime":1608626170982,"results":"31","hashOfConfig":"20"},{"size":81,"mtime":1608648359567,"results":"32","hashOfConfig":"20"},{"size":1245,"mtime":1607160012783,"results":"33","hashOfConfig":"20"},{"size":107,"mtime":1608725051191,"results":"34","hashOfConfig":"20"},{"size":2536,"mtime":1608725115899,"results":"35","hashOfConfig":"20"},{"size":487,"mtime":1607160012787,"results":"36","hashOfConfig":"20"},{"size":11237,"mtime":1608809202380,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1syinn9",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},"/home/alexander/maroom-ui/src/theme/typography.ts",[],["83","84"],"/home/alexander/maroom-ui/src/theme/colors.ts",[],"/home/alexander/maroom-ui/src/components/Input/Input.tsx",[],["85","86"],"/home/alexander/maroom-ui/src/index.tsx",[],"/home/alexander/maroom-ui/src/App.tsx",[],"/home/alexander/maroom-ui/src/components/Heading/Heading.tsx",[],["87","88"],"/home/alexander/maroom-ui/src/components/Text/Text.tsx",["89"],"import * as React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nexport enum TextSizes {\n  textSm = 'text_small',\n  textMd = 'text_md',\n  textLg = 'text_lg',\n}\n\nexport enum TextWeights {\n  bold = 600,\n  normal = 500,\n  medium = 400,\n}\n\ntype Props = {\n  color?: string | undefined,\n  children: React.ReactNode | undefined,\n  size?: TextSizes | undefined,\n  weight?: TextWeights,\n  textAlign?: string | undefined\n}\n\nconst fontSizes = {\n  [TextSizes.textLg]: {\n    fontSize: 18,\n    lineHeight: 28\n  },\n  [TextSizes.textMd]: {\n    fontSize: 14,\n    lineHeight: 22\n  },\n  [TextSizes.textSm]: {\n    fontSize: 13,\n    lineHeight: 20\n  },\n}\n\nconst useStyles = makeStyles({\n  root: (props: Props) => ({\n    fontSize: `${props.size ?\n      fontSizes[props.size].fontSize :\n      fontSizes[TextSizes.textMd]}px`,\n  })\n})\n\nconst Text = (props: Props) => {\n  const { size, children } = props;\n  const classes = useStyles(props)\n  return (\n    <Typography className={classes.root} >\n      {children}\n    </Typography>\n  )\n}\n\nText.defaultProps = {\n  size: TextSizes.textMd\n}\n\nexport default Text\n",["90","91"],"/home/alexander/maroom-ui/src/components/ValidationError/ValidationError.tsx",[],"/home/alexander/maroom-ui/src/theme/index.ts",[],"/home/alexander/maroom-ui/src/components/Heading/index.ts",[],"/home/alexander/maroom-ui/src/components/Text/index.ts",[],"/home/alexander/maroom-ui/src/components/Input/index.ts",[],"/home/alexander/maroom-ui/src/components/ValidationError/index.ts",[],"/home/alexander/maroom-ui/src/icons/CloseInCircleIcon.js",[],["92","93"],"/home/alexander/maroom-ui/src/components/Button/index.ts",[],"/home/alexander/maroom-ui/src/components/Button/Button.tsx",["94"],"import * as React from 'react'\nimport { Button as ButtonMaterial} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport colors from '../../theme/colors'\n\nconst useStyles = makeStyles(() => ({\n  root: (props: ButtonProps) => ({\n    backgroundColor: colors[props.theme].main ?? colors.buttonPrimary.main,\n    background: 'white',\n    height: '40px',\n    fontSize: '14x',\n    lineHeight: '14px',\n    borderRadius: '66px',\n    color: colors[props.theme].contrastText ?? colors.buttonPrimary.contrastText,\n    textTransform: 'none',\n    boxShadow: 'none',\n    '& svg': {\n      '& path': {\n        fill: colors[props.theme].contrastText ?? colors.buttonPrimary.contrastText,\n      }\n    },\n    '&:hover': {\n      backgroundColor: colors[props.theme].contrastText ?? colors.buttonPrimary.contrastText,\n      color: colors[props.theme].main ?? colors.buttonPrimary.main,\n      '& svg': {\n        '& path': {\n          fill: colors[props.theme].main ?? colors.buttonPrimary.main,\n        }\n      },\n    },\n    '&:active': {\n      backgroundColor: colors.brandPrimary.main,\n      boxShadow: '0px 5px 16px rgba(0, 0, 0, 0.1)'\n    },\n  }),\n  sizeSmall: {\n    height: '32px !important',\n    fontSize: '12px !important',\n    lineHeight: '14px !important'\n  },\n  sizeLarge: {\n    height: '48px !important',\n    fontSize: '12px !important',\n    lineHeight: '14px !important'\n  },\n  startIcon: {\n    // padding: '10px'\n  }\n}))\n\nexport enum ButtonSizes {\n  sm = 'small',\n  lg = 'large'\n}\n\nexport enum ButtonThemes {\n  brandPrimary = 'brandPrimary',\n  gray400 = 'gray400',\n  redLight = 'redLight'\n}\n\ntype ButtonProps = {\n  size?: ButtonSizes,\n  theme: string,\n  children?: React.ReactNode;\n  startIcon?: React.ReactNode;\n  endIcon?:  React.ReactNode;\n  disabled?: boolean;\n  fullWidth?: boolean;\n  className?: string;\n}\n\nconst Button = (props: ButtonProps) => {\n  const { size, theme, startIcon, endIcon, disabled, fullWidth, className } = props\n  const classes = useStyles(props)\n  return (\n    <ButtonMaterial\n      size={size}\n      fullWidth={fullWidth}\n      startIcon={startIcon}\n      endIcon={endIcon}\n      disabled={disabled}\n      variant={'contained'}\n      classes={{\n        sizeSmall: classes.sizeSmall,\n        sizeLarge: classes.sizeLarge,\n        root: classes.root,\n        startIcon: classes.startIcon\n      }}\n      className={className}\n    >\n      {props.children}\n    </ButtonMaterial>\n  )\n}\n\nButton.defaultProps = {\n  disabled: false,\n  fullWidth: true,\n  theme: 'brandPrimary'\n}\n\nexport default Button\n","/home/alexander/maroom-ui/src/icons/Plus.tsx",[],"/home/alexander/maroom-ui/src/dist/index.js",["95"],"function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar core = require('@material-ui/core');\nvar styles = require('@material-ui/styles');\n\n(function (Colors) {\n  Colors[\"brandPrimary\"] = \"brandPrimary\";\n  Colors[\"gray400\"] = \"gray400\";\n  Colors[\"gray300\"] = \"gray300\";\n  Colors[\"gray200\"] = \"gray200\";\n  Colors[\"customBlack\"] = \"customBlack\";\n  Colors[\"medium\"] = \"medium\";\n  Colors[\"redLight\"] = \"redLight\";\n  Colors[\"customRed\"] = \"customRed\";\n})(exports.Colors || (exports.Colors = {}));\n\nvar colors = {\n  brandPrimary: {\n    main: '#F57C00',\n    contrastText: 'white'\n  },\n  gray400: {\n    main: '#EAECEF',\n    contrastText: '#7F8285'\n  },\n  gray300: {\n    main: '#F1F2F4',\n    contrastText: '#7F8285'\n  },\n  gray200: {\n    main: '#FBFBFD',\n    contrastText: '#7F8285'\n  },\n  customBlack: {\n    main: '#191919'\n  },\n  medium: {\n    main: '#7F8285'\n  },\n  redLight: {\n    main: '#FCE6E6',\n    contrastText: '#F57C00'\n  },\n  customRed: {\n    main: '#EB5757'\n  }\n};\n\nvar useStyles = styles.makeStyles(function () {\n  return {\n    root: function root(props) {\n      var _colors$props$theme$m, _colors$props$theme$c, _colors$props$theme$c2, _colors$props$theme$c3, _colors$props$theme$m2, _colors$props$theme$m3;\n\n      return {\n        backgroundColor: (_colors$props$theme$m = colors[props.theme].main) != null ? _colors$props$theme$m : colors.buttonPrimary.main,\n        background: 'white',\n        height: '40px',\n        fontSize: '14x',\n        lineHeight: '14px',\n        borderRadius: '66px',\n        color: (_colors$props$theme$c = colors[props.theme].contrastText) != null ? _colors$props$theme$c : colors.buttonPrimary.contrastText,\n        textTransform: 'none',\n        boxShadow: 'none',\n        '& svg': {\n          '& path': {\n            fill: (_colors$props$theme$c2 = colors[props.theme].contrastText) != null ? _colors$props$theme$c2 : colors.buttonPrimary.contrastText\n          }\n        },\n        '&:hover': {\n          backgroundColor: (_colors$props$theme$c3 = colors[props.theme].contrastText) != null ? _colors$props$theme$c3 : colors.buttonPrimary.contrastText,\n          color: (_colors$props$theme$m2 = colors[props.theme].main) != null ? _colors$props$theme$m2 : colors.buttonPrimary.main,\n          '& svg': {\n            '& path': {\n              fill: (_colors$props$theme$m3 = colors[props.theme].main) != null ? _colors$props$theme$m3 : colors.buttonPrimary.main\n            }\n          }\n        },\n        '&:active': {\n          backgroundColor: colors.brandPrimary.main,\n          boxShadow: '0px 5px 16px rgba(0, 0, 0, 0.1)'\n        }\n      };\n    },\n    sizeSmall: {\n      height: '32px !important',\n      fontSize: '12px !important',\n      lineHeight: '14px !important'\n    },\n    sizeLarge: {\n      height: '48px !important',\n      fontSize: '12px !important',\n      lineHeight: '14px !important'\n    },\n    startIcon: {}\n  };\n});\n\n(function (ButtonSizes) {\n  ButtonSizes[\"sm\"] = \"small\";\n  ButtonSizes[\"lg\"] = \"large\";\n})(exports.ButtonSizes || (exports.ButtonSizes = {}));\n\n(function (ButtonThemes) {\n  ButtonThemes[\"brandPrimary\"] = \"brandPrimary\";\n  ButtonThemes[\"gray400\"] = \"gray400\";\n  ButtonThemes[\"redLight\"] = \"redLight\";\n})(exports.ButtonThemes || (exports.ButtonThemes = {}));\n\nvar Button = function Button(props) {\n  var size = props.size,\n      startIcon = props.startIcon,\n      endIcon = props.endIcon,\n      disabled = props.disabled,\n      fullWidth = props.fullWidth,\n      className = props.className;\n  var classes = useStyles(props);\n  return React.createElement(core.Button, Object.assign({}, props, {\n    size: size,\n    fullWidth: fullWidth,\n    startIcon: startIcon,\n    endIcon: endIcon,\n    disabled: disabled,\n    variant: 'contained',\n    classes: {\n      sizeSmall: classes.sizeSmall,\n      sizeLarge: classes.sizeLarge,\n      root: classes.root,\n      startIcon: classes.startIcon\n    },\n    className: className\n  }), props.children);\n};\n\nButton.defaultProps = {\n  disabled: false,\n  fullWidth: true,\n  theme: 'brandPrimary'\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar CloseInCircleIcon = function CloseInCircleIcon() {\n  return React__default.createElement(\"svg\", {\n    width: '16',\n    height: '16',\n    viewBox: '0 0 16 16',\n    fill: 'none',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React__default.createElement(\"path\", {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    d: 'M7.99935 15.3334C12.0494 15.3334 15.3327 12.0502 15.3327 8.00008C15.3327 3.94999 12.0494 0.666748 7.99935 0.666748C3.94926 0.666748 0.666016 3.94999 0.666016 8.00008C0.666016 12.0502 3.94926 15.3334 7.99935 15.3334ZM7.99935 13.3334C10.9449 13.3334 13.3327 10.9456 13.3327 8.00008C13.3327 5.05456 10.9449 2.66675 7.99935 2.66675C5.05383 2.66675 2.66602 5.05456 2.66602 8.00008C2.66602 10.9456 5.05383 13.3334 7.99935 13.3334ZM9.52795 5.52868C9.78829 5.26833 10.2104 5.26833 10.4708 5.52868C10.7311 5.78903 10.7311 6.21114 10.4708 6.47149L8.94216 8.00008L10.4708 9.52868C10.7311 9.78903 10.7311 10.2111 10.4708 10.4715C10.2104 10.7318 9.78829 10.7318 9.52795 10.4715L7.99935 8.94289L6.47075 10.4715C6.2104 10.7318 5.78829 10.7318 5.52794 10.4715C5.2676 10.2111 5.2676 9.78903 5.52794 9.52868L7.05654 8.00008L5.52794 6.47149C5.2676 6.21114 5.2676 5.78903 5.52794 5.52868C5.78829 5.26833 6.2104 5.26833 6.47075 5.52868L7.99935 7.05727L9.52795 5.52868Z',\n    fill: '#EB5757'\n  }));\n};\n\nvar useStyles$1 = styles.makeStyles(function () {\n  return {\n    root: function root(props) {\n      return {\n        height: '32px',\n        display: props.open ? 'flex' : 'none',\n        alignItems: 'center',\n        background: colors.redLight.main,\n        borderRadius: '0 0 12px 12px',\n        boxShadow: '0px 0px 1px rgba(10, 31, 68, 0.08), 0px 3px 4px rgba(10, 31, 68, 0.1)',\n        paddingLeft: '18px'\n      };\n    },\n    content: {\n      fontSize: '12px',\n      lineHeight: '14px',\n      color: colors.customRed.main,\n      paddingLeft: '10px'\n    }\n  };\n});\n\nvar ValidationError = function ValidationError(props) {\n  var classes = useStyles$1(props);\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(\"div\", null, React.createElement(CloseInCircleIcon, null)), React.createElement(\"div\", null, React.createElement(core.Typography, {\n    className: classes.content\n  }, props.children)));\n};\n\nValidationError.defaultProps = {\n  open: false\n};\n\nvar useStyles$2 = styles.makeStyles(function () {\n  return {\n    root: function root(props) {\n      return {\n        backgroundColor: 'white',\n        borderRadius: props.error ? '12px 12px 0 0' : '12px',\n        background: 'white',\n        '& .MuiFormLabel-root.Mui-focused': {\n          border: 'none',\n          color: colors.medium.main\n        },\n        '& .MuiFilledInput-underline': {\n          background: 'white'\n        },\n        '& .Mui-focused': {\n          border: \"1px solid \" + colors.brandPrimary.main,\n          background: 'white'\n        }\n      };\n    },\n    inputRoot: function inputRoot(props) {\n      return {\n        background: 'white',\n        border: (props.error ? 1.5 : 1) + \"px solid \" + (props.error ? colors.customRed.main : colors.gray400.main),\n        borderRadius: props.error ? '12px 12px 0 0' : '12px'\n      };\n    },\n    focusedInput: {\n      background: 'white'\n    },\n    underline: {\n      '&::before': {\n        display: 'none'\n      },\n      '&::after': {\n        display: 'none'\n      }\n    }\n  };\n});\n\n(function (InputTypes) {\n  InputTypes[\"password\"] = \"password\";\n  InputTypes[\"email\"] = \"email\";\n  InputTypes[\"text\"] = \"text\";\n})(exports.InputTypes || (exports.InputTypes = {}));\n\nvar Input = function Input(props) {\n  var error = props.error,\n      inputProps = props.inputProps;\n  var classes = useStyles$2(props);\n  return React.createElement(\"div\", null, React.createElement(core.TextField, Object.assign({}, props, {\n    classes: {\n      root: classes.root\n    },\n    variant: 'filled',\n    fullWidth: true,\n    error: error,\n    InputProps: _extends({}, inputProps, {\n      classes: {\n        root: classes.inputRoot,\n        underline: classes.underline,\n        focused: classes.focusedInput\n      },\n      autoComplete: 'off'\n    })\n  })), React.createElement(ValidationError, {\n    open: error\n  }, \"Alert Message\"));\n};\n\nInput.defaultProps = {\n  error: false\n};\n\n(function (HeadingSizes) {\n  HeadingSizes[\"h1\"] = \"h1\";\n  HeadingSizes[\"h2\"] = \"h2\";\n  HeadingSizes[\"h3\"] = \"h3\";\n  HeadingSizes[\"h4\"] = \"h4\";\n  HeadingSizes[\"h5\"] = \"h5\";\n})(exports.HeadingSizes || (exports.HeadingSizes = {}));\n\n(function (HeadingWeights) {\n  HeadingWeights[HeadingWeights[\"bold\"] = 600] = \"bold\";\n  HeadingWeights[HeadingWeights[\"normal\"] = 500] = \"normal\";\n  HeadingWeights[HeadingWeights[\"medium\"] = 400] = \"medium\";\n})(exports.HeadingWeights || (exports.HeadingWeights = {}));\n\nvar useStyles$3 = styles.makeStyles({\n  root: function root(props) {\n    return {\n      fontWeight: props.weight,\n      color: props.color ? colors[props.color].main : 'black'\n    };\n  }\n});\n\nvar Heading = function Heading(props) {\n  var size = props.size,\n      children = props.children;\n  var classes = useStyles$3(props);\n  return React.createElement(core.Typography, {\n    variant: size,\n    className: classes.root\n  }, children);\n};\n\nHeading.defaultProps = {\n  size: exports.HeadingSizes.h2,\n  color: 'customBlack'\n};\n\nvar _TextSizesStyles;\n\n(function (TextSizes) {\n  TextSizes[\"textSm\"] = \"text_small\";\n  TextSizes[\"textMd\"] = \"text_md\";\n  TextSizes[\"textLg\"] = \"text_lg\";\n})(exports.TextSizes || (exports.TextSizes = {}));\n\n(function (TextWeights) {\n  TextWeights[TextWeights[\"bold\"] = 600] = \"bold\";\n  TextWeights[TextWeights[\"normal\"] = 500] = \"normal\";\n  TextWeights[TextWeights[\"medium\"] = 400] = \"medium\";\n})(exports.TextWeights || (exports.TextWeights = {}));\n\nvar TextSizesStyles = (_TextSizesStyles = {}, _TextSizesStyles[exports.TextSizes.textLg] = {\n  fontSize: 18,\n  lineHeight: 28\n}, _TextSizesStyles[exports.TextSizes.textMd] = {\n  fontSize: 14,\n  lineHeight: 22\n}, _TextSizesStyles[exports.TextSizes.textSm] = {\n  fontSize: 13,\n  lineHeight: 20\n}, _TextSizesStyles);\nvar useStyles$4 = styles.makeStyles({\n  root: function root(props) {\n    return {\n      fontSize: (props.size ? TextSizesStyles[props.size].fontSize : TextSizesStyles[exports.TextSizes.textMd]) + \"px\",\n      color: props.color ? colors[props.color].main : 'black'\n    };\n  }\n});\n\nvar Text = function Text(props) {\n  var children = props.children;\n  var classes = useStyles$4(props);\n  return React.createElement(core.Typography, {\n    className: classes.root\n  }, children);\n};\n\nText.defaultProps = {\n  size: exports.TextSizes.textMd,\n  color: 'customBlack'\n};\n\nexports.Button = Button;\nexports.Heading = Heading;\nexports.Input = Input;\nexports.Text = Text;\n//# sourceMappingURL=index.js.map\n",["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"98","replacedBy":"104"},{"ruleId":"100","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":49,"column":11,"nodeType":"108","messageId":"109","endLine":49,"endColumn":15},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","replacedBy":"111"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"106","severity":1,"message":"112","line":74,"column":17,"nodeType":"108","messageId":"109","endLine":74,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":143,"column":3,"nodeType":"108","messageId":"115","endLine":143,"endColumn":11},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],["116"],["117"],"@typescript-eslint/no-unused-vars","'size' is assigned a value but never used.","Identifier","unusedVar",["116"],["117"],"'theme' is assigned a value but never used.","no-func-assign","'_extends' is a function.","isAFunction","no-global-assign","no-unsafe-negation"]